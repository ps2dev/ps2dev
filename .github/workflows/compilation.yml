name: CI

on:
  push:
  pull_request:
  repository_dispatch:
    types: [run_build]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ${{ matrix.os[0] }}
    strategy:
      matrix:
        os: [[macos-latest, bash], [ubuntu-latest, bash], [windows-latest, msys2]]
      fail-fast: false
    defaults:
     run:
      shell: ${{ matrix.os[1] }} {0}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install Ubuntu packages
      if: matrix.os[0] == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get -y install texinfo bison flex gettext libgmp3-dev libmpfr-dev libmpc-dev
        echo "MSYSTEM=x64" >> $GITHUB_ENV

    - name: Install macOS packages
      if: matrix.os[0] == 'macos-latest'
      run: |
        brew update
        brew install texinfo bison flex gnu-sed gsl gmp mpfr libmpc
        echo "MSYSTEM=x64" >> $GITHUB_ENV

    - name: Install MSYS2 packages
      if: matrix.os[0] == 'windows-latest'
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW32
        install: |
          base-devel git make texinfo flex bison patch binutils mingw-w64-i686-gcc mpc-devel tar
          mingw-w64-i686-cmake mingw-w64-i686-make mingw-w64-i686-libogg mingw-w64-mman
        update: true
        shell: msys2 {0}

    - name: Runs all the stages in the shell
      continue-on-error: true
      run: |
        export PS2DEV=$PWD/ps2dev
        export PS2SDK=$PS2DEV/ps2sdk
        export GSKIT=$PS2DEV/gsKit
        export PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"
        export PATH="/usr/local/opt/bison/bin:$PATH"
        export PATH=$PATH:$PS2DEV/bin:$PS2DEV/ee/bin:$PS2DEV/iop/bin:$PS2DEV/dvp/bin:$PS2SDK/bin
        ./build-all.sh

    - name: Get short SHA
      id: slug
      run: echo "sha8=${MSYSTEM}-sha[$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_OUTPUT

    - name: Prepare ps2dev folder
      run: |
        tar -zcvf ps2dev-${{matrix.os[0]}}.tar.gz ps2dev

    - uses: actions/upload-artifact@v3
      with:
        name: ps2dev-${{matrix.os[0]}}-${{ steps.slug.outputs.sha8 }}
        path: ps2dev-${{matrix.os[0]}}.tar.gz

    - name: Extract tag name
      if: startsWith(github.ref, 'refs/tags/')
      id: tag
      run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT

    - name: Create pre-release
      if: github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v1
      with:
        files: ps2dev-${{matrix.os[0]}}.tar.gz
        prerelease: true
        name: "Development build"
        tag_name: "latest"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: ps2dev-${{matrix.os[0]}}.tar.gz
        tag_name: ${{ steps.tag.outputs.VERSION }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
